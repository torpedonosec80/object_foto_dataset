{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPwNQP34Cdxg8rhvqJ3ykHi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Анализ данных"],"metadata":{"id":"7iJdXXSWBbBg"}},{"cell_type":"markdown","source":["##Описание источника"],"metadata":{"id":"CUUOfMQaBiWI"}},{"cell_type":"markdown","source":["Датасет сформирован из набора фотографий итогов проведение планово-профилактических работ на объектах связи\n","\n","Извлекались фотографии на которых зафиксирован общий вид мест размещения телекоммуникационных шкафов исключительно в закрытом состоянии, отсальные снимки в расчет не берем\n","\n","Далее с помощью \"написать ПО\" по каждой фотографии подготовлены аннотации содержащие\n","- bounding box в котором присутствуют исследуемые объекты\n","- описание типа шкафа\n","- дополнительные признаки\n","\n","\n","После первого этапа EDA были выявлены ряд проблем всвязи с чем проведены следующие доработки\n","- увеличен датасет до 900+ фотографий\n","- при увеличении датасета особый упор был на дополнение классов с малым количеством объектов\n","- проведена проверка корректности формирования аннотаций в частности смещение BB по ряду фотографий\n","- устранен класс unknown указанием корректного"],"metadata":{"id":"gw1xyMcgBmCY"}},{"cell_type":"markdown","source":["##Шаг 1: Подготовка среды и загрузка данных\n","\n","Библиотеки:\n"],"metadata":{"id":"h74RQaYJCftp"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"hQWbDrp7BMjp"},"outputs":[],"source":["import os\n","import xml.etree.ElementTree as ET\n","import cv2\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from PIL import Image\n","from glob import glob"]},{"cell_type":"markdown","source":["Dataset:"],"metadata":{"id":"Ly6_5wjNCzkl"}},{"cell_type":"code","source":["!git clone https://github.com/torpedonosec80/object_foto_dataset.git"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dFXVWUzkCvL0","executionInfo":{"status":"ok","timestamp":1750519167384,"user_tz":-180,"elapsed":32449,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"04359b18-2bb3-4d32-b4e2-974948cb158a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'object_foto_dataset'...\n","remote: Enumerating objects: 23601, done.\u001b[K\n","remote: Counting objects: 100% (31/31), done.\u001b[K\n","remote: Compressing objects: 100% (6/6), done.\u001b[K\n","remote: Total 23601 (delta 26), reused 28 (delta 25), pack-reused 23570 (from 2)\u001b[K\n","Receiving objects: 100% (23601/23601), 400.60 MiB | 16.99 MiB/s, done.\n","Resolving deltas: 100% (15364/15364), done.\n","Updating files: 100% (6604/6604), done.\n"]}]},{"cell_type":"markdown","source":["Структура данных:\n","\n","проверим количество фотографий и аннотаций к ним"],"metadata":{"id":"YxotorFsDMuD"}},{"cell_type":"code","source":["# images_dir = '/content/object_foto_dataset/dataset_foto_boxes/images'\n","# annotations_dir = '/content/object_foto_dataset/dataset_foto_boxes/annotations_xml'\n","\n","dataset_dir = '/content/object_foto_dataset/boxes_dataset'\n","\n","image_files = sorted([f for f in os.listdir(dataset_dir) if f.endswith('.jpg') or f.endswith('.jpeg') or f.endswith('.JPG')])\n","annotation_files = sorted([f for f in os.listdir(dataset_dir) if f.endswith('.xml')])\n","\n","print(f\"Найдено изображений: {len(image_files)}\")\n","print(f\"Найдено аннотаций: {len(annotation_files)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G0Ksybn3DHRJ","executionInfo":{"status":"ok","timestamp":1750519167417,"user_tz":-180,"elapsed":32,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"f77a31e4-ab4e-4a1a-b066-c3d0054bde4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Найдено изображений: 935\n","Найдено аннотаций: 935\n"]}]},{"cell_type":"markdown","source":["количество изображений и аннотаций совпадает\n","\n","*общее количество фотографий не велико, возможность увеличения набора данных будет дополнительной задачей с учетом результатов исследования датасета и появления возможных замечаний*"],"metadata":{"id":"QA7bRmSyDTYt"}},{"cell_type":"markdown","source":["##Шаг 2: Проверка согласованности данных"],"metadata":{"id":"UTqMhj9YD2xx"}},{"cell_type":"code","source":["# Проверка соответствия имен файлов\n","image_basenames = {os.path.splitext(f)[0] for f in image_files}\n","annotation_basenames = {os.path.splitext(f)[0] for f in annotation_files}\n","\n","missing_images = annotation_basenames - image_basenames\n","missing_annotations = image_basenames - annotation_basenames\n","\n","print(f\"Аннотации без изображений: {len(missing_images)}\")\n","print(f\"Изображения без аннотаций: {len(missing_annotations)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EI746RnUDSnw","executionInfo":{"status":"ok","timestamp":1750519167439,"user_tz":-180,"elapsed":21,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"3355cb66-f5f1-4668-b629-8cc591b7600d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Аннотации без изображений: 0\n","Изображения без аннотаций: 0\n"]}]},{"cell_type":"code","source":["missing_images"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLvboLQfO4UF","executionInfo":{"status":"ok","timestamp":1750519167492,"user_tz":-180,"elapsed":45,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"32620fc9-d59e-441a-8e4a-30d7ecb7084b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["set()"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["missing_annotations"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fi9-WG_wO-vB","executionInfo":{"status":"ok","timestamp":1750519167531,"user_tz":-180,"elapsed":24,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"f4d45d9d-9152-4da7-e7bd-c8496b30929c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["set()"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["для всех фотографий есть аннотации"],"metadata":{"id":"EK773CL7D5qh"}},{"cell_type":"markdown","source":["##Шаг 3: Анализ аннотаций\n","\n","a) Парсинг XML:"],"metadata":{"id":"tHoYQmNIEJsR"}},{"cell_type":"code","source":["rows = []\n","anns   = glob(os.path.join(dataset_dir, '*.xml'))\n","for xml_file in anns:\n","    try:\n","        tree = ET.parse(xml_file)\n","        root = tree.getroot()\n","\n","        # Имя изображения\n","        filename_tag = root.find('filename')\n","        if filename_tag is None or filename_tag.text is None:\n","            print(f\"[!] Нет имени изображения: {xml_file}\")\n","            continue\n","\n","        img_name = filename_tag.text.strip()\n","        img_path = os.path.join(dataset_dir, img_name)\n","        if not os.path.exists(img_path):\n","            print(f\"[!] Изображение не найдено: {img_path}\")\n","            continue\n","\n","        # Получаем размер изображения напрямую\n","        with Image.open(img_path) as img:\n","            w, h = img.size\n","\n","        for obj in root.findall('object'):\n","            cls = obj.find('name')\n","            bbox = obj.find('bndbox')\n","            if cls is None or bbox is None:\n","                continue\n","\n","            xmin = bbox.find('xmin')\n","            ymin = bbox.find('ymin')\n","            xmax = bbox.find('xmax')\n","            ymax = bbox.find('ymax')\n","\n","            if None in (xmin, ymin, xmax, ymax):\n","                continue\n","\n","            rows.append({\n","                'image': img_name,\n","                'class': cls.text,\n","                'img_w': w,\n","                'img_h': h,\n","                'xmin': int(xmin.text),\n","                'ymin': int(ymin.text),\n","                'xmax': int(xmax.text),\n","                'ymax': int(ymax.text)\n","            })\n","\n","    except Exception as e:\n","        print(f\"[!] Ошибка в {xml_file}: {e}\")\n","\n","df = pd.DataFrame(rows)\n","df['bbox_w'] = df['xmax'] - df['xmin']\n","df['bbox_h'] = df['ymax'] - df['ymin']\n","df['bbox_area'] = df['bbox_w'] * df['bbox_h']\n","print(f\"Объектов загружено: {len(df)}\")\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"pkGhv0LuFbn5","executionInfo":{"status":"ok","timestamp":1750519168018,"user_tz":-180,"elapsed":432,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"ed204f8f-87ae-4c48-9be7-e98dd820ae30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Объектов загружено: 1036\n"]},{"output_type":"execute_result","data":{"text/plain":["                      image    class  img_w  img_h  xmin  ymin  xmax  ymax  \\\n","0     image_images_0153.jpg  shta-9m   2736   3648  1084   827  2269  2029   \n","1  additional_e2_6u_36.jpeg    e2-6u   1024    768   366   111   730   308   \n","2     image_e2_6u_0019.jpeg    e2-6u   1024    576   234   130   761   460   \n","3  additional_shta_9_35.jpg   shta-9   1200   1600   428   430   954   984   \n","4     image_e2_6u_0026.jpeg    e2-6u   1024    473   173    37   848   468   \n","\n","   bbox_w  bbox_h  bbox_area  \n","0    1185    1202    1424370  \n","1     364     197      71708  \n","2     527     330     173910  \n","3     526     554     291404  \n","4     675     431     290925  "],"text/html":["\n","  <div id=\"df-f17ff292-ea5c-42b8-8ee3-5570ac68a304\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>class</th>\n","      <th>img_w</th>\n","      <th>img_h</th>\n","      <th>xmin</th>\n","      <th>ymin</th>\n","      <th>xmax</th>\n","      <th>ymax</th>\n","      <th>bbox_w</th>\n","      <th>bbox_h</th>\n","      <th>bbox_area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>image_images_0153.jpg</td>\n","      <td>shta-9m</td>\n","      <td>2736</td>\n","      <td>3648</td>\n","      <td>1084</td>\n","      <td>827</td>\n","      <td>2269</td>\n","      <td>2029</td>\n","      <td>1185</td>\n","      <td>1202</td>\n","      <td>1424370</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>additional_e2_6u_36.jpeg</td>\n","      <td>e2-6u</td>\n","      <td>1024</td>\n","      <td>768</td>\n","      <td>366</td>\n","      <td>111</td>\n","      <td>730</td>\n","      <td>308</td>\n","      <td>364</td>\n","      <td>197</td>\n","      <td>71708</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>image_e2_6u_0019.jpeg</td>\n","      <td>e2-6u</td>\n","      <td>1024</td>\n","      <td>576</td>\n","      <td>234</td>\n","      <td>130</td>\n","      <td>761</td>\n","      <td>460</td>\n","      <td>527</td>\n","      <td>330</td>\n","      <td>173910</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>additional_shta_9_35.jpg</td>\n","      <td>shta-9</td>\n","      <td>1200</td>\n","      <td>1600</td>\n","      <td>428</td>\n","      <td>430</td>\n","      <td>954</td>\n","      <td>984</td>\n","      <td>526</td>\n","      <td>554</td>\n","      <td>291404</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>image_e2_6u_0026.jpeg</td>\n","      <td>e2-6u</td>\n","      <td>1024</td>\n","      <td>473</td>\n","      <td>173</td>\n","      <td>37</td>\n","      <td>848</td>\n","      <td>468</td>\n","      <td>675</td>\n","      <td>431</td>\n","      <td>290925</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f17ff292-ea5c-42b8-8ee3-5570ac68a304')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f17ff292-ea5c-42b8-8ee3-5570ac68a304 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f17ff292-ea5c-42b8-8ee3-5570ac68a304');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6927bae1-d510-440c-a462-f867eb7013ce\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6927bae1-d510-440c-a462-f867eb7013ce')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6927bae1-d510-440c-a462-f867eb7013ce button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1036,\n  \"fields\": [\n    {\n      \"column\": \"image\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 935,\n        \"samples\": [\n          \"additional_sv5_20.jpeg\",\n          \"additional_shta_9m_26.jpg\",\n          \"additional_shta_9_11.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"shta-9m\",\n          \"e2-6u\",\n          \"sv-5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"img_w\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 708,\n        \"min\": 180,\n        \"max\": 4624,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          519,\n          2736,\n          3264\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"img_h\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 823,\n        \"min\": 180,\n        \"max\": 4608,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          3472,\n          1206,\n          375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"xmin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 284,\n        \"min\": 1,\n        \"max\": 2222,\n        \"num_unique_values\": 477,\n        \"samples\": [\n          389,\n          31,\n          87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ymin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 223,\n        \"min\": 1,\n        \"max\": 1761,\n        \"num_unique_values\": 509,\n        \"samples\": [\n          456,\n          236,\n          337\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"xmax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 604,\n        \"min\": 131,\n        \"max\": 4610,\n        \"num_unique_values\": 669,\n        \"samples\": [\n          1680,\n          819,\n          1502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ymax\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 550,\n        \"min\": 103,\n        \"max\": 3426,\n        \"num_unique_values\": 685,\n        \"samples\": [\n          532,\n          1611,\n          1091\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bbox_w\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 512,\n        \"min\": 34,\n        \"max\": 4088,\n        \"num_unique_values\": 700,\n        \"samples\": [\n          553,\n          1018,\n          1197\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bbox_h\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 467,\n        \"min\": 59,\n        \"max\": 3124,\n        \"num_unique_values\": 657,\n        \"samples\": [\n          552,\n          489,\n          732\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bbox_area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1248152,\n        \"min\": 2006,\n        \"max\": 11807316,\n        \"num_unique_values\": 1031,\n        \"samples\": [\n          209573,\n          4804590,\n          1208744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["b) Анализ объектов:\n","\n"],"metadata":{"id":"qBE0j_YrEajw"}},{"cell_type":"code","source":["df.groupby(\"class\")['image'].agg('count').reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"2QBtzTJgWCrV","executionInfo":{"status":"ok","timestamp":1750519168100,"user_tz":-180,"elapsed":78,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"820285bc-7005-4cd4-f52b-c61e0f433534"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     class  image\n","0    e2-6u    121\n","1   shta-3    192\n","2  shta-7m    160\n","3   shta-9    159\n","4  shta-9m    150\n","5  shta-ps    126\n","6     sv-5    128"],"text/html":["\n","  <div id=\"df-6918d332-536e-4c14-8732-ff247d2eff20\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>class</th>\n","      <th>image</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>e2-6u</td>\n","      <td>121</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>shta-3</td>\n","      <td>192</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>shta-7m</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>shta-9</td>\n","      <td>159</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>shta-9m</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>shta-ps</td>\n","      <td>126</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>sv-5</td>\n","      <td>128</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6918d332-536e-4c14-8732-ff247d2eff20')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6918d332-536e-4c14-8732-ff247d2eff20 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6918d332-536e-4c14-8732-ff247d2eff20');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-75cf92c7-b895-4815-9f72-cc5796c75aa8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75cf92c7-b895-4815-9f72-cc5796c75aa8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-75cf92c7-b895-4815-9f72-cc5796c75aa8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"e2-6u\",\n          \"shta-3\",\n          \"shta-ps\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"image\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 121,\n        \"max\": 192,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          121,\n          192,\n          126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["classes = list(df.groupby(\"class\")['image'].agg('count').reset_index()['class'])\n","counts  = list(df.groupby(\"class\")['image'].agg('count').reset_index()['image'])\n","\n","plt.figure(figsize=(12, 6))\n","plt.bar(classes, counts, color='skyblue')\n","plt.axhline(y=sum(counts)/len(counts), color='r', linestyle='--', label=f'Среднее ({sum(counts)/len(counts):.1f})')\n","plt.title('Распределение классов шкафов', fontsize=14)\n","plt.xlabel('Тип шкафа', fontsize=12)\n","plt.ylabel('Количество объектов', fontsize=12)\n","plt.xticks(rotation=45)\n","plt.legend()\n","plt.grid(axis='y', linestyle='--', alpha=0.7)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":605},"id":"sqE_AeT0EQ6F","executionInfo":{"status":"ok","timestamp":1750519168444,"user_tz":-180,"elapsed":342,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"48ab10ed-1486-4d37-c3cd-e283b37a5b96"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Анализ распределения классов (типов шкафов)\n","\n","1. Дисбаланс классов\n","\n","дисбалланс устранен, всего 3 класса представлены меньше среднего но разницу можем считать не значительной"],"metadata":{"id":"DZcee16XErxZ"}},{"cell_type":"markdown","source":["2. Класс unknown\n","\n","устранен. аннотация скорректирована к корректному классу"],"metadata":{"id":"j6xjwhE1E39x"}},{"cell_type":"markdown","source":["3. Достаточность данных\n","\n","количество объектов увеличено с 436 до 1000+"],"metadata":{"id":"Xfipkw6bE97P"}},{"cell_type":"markdown","source":["Все необходимые мероприятия выполнены"],"metadata":{"id":"dE8sIJ3kFA_0"}},{"cell_type":"markdown","source":["## Шаг 4: Размеры BBox\n"],"metadata":{"id":"8nr4D6WvGM1X"}},{"cell_type":"code","source":["plt.figure(figsize=(6,4))\n","sns.histplot(df['bbox_area'], bins=30)\n","plt.title(\"Распределение площадей bbox\")\n","plt.xlabel(\"Площадь bbox (пикселей²)\")\n","plt.ylabel(\"Частота\")\n","plt.show()\n","\n","plt.figure(figsize=(6,4))\n","sns.scatterplot(x=df['img_w']*df['img_h'], y=df['bbox_area'])\n","plt.title(\"Зависимость площади bbox от площади изображения\")\n","plt.xlabel(\"Площадь изображения\")\n","plt.ylabel(\"Площадь bbox\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":819},"id":"HVOLxMVnEl70","executionInfo":{"status":"ok","timestamp":1750519168943,"user_tz":-180,"elapsed":496,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"094d710e-e588-4aea-d242-1c9c95d95b89"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Что показывает гистограмма:**\n","\n","Сильная концентрация bbox с малой площадью:\n","- Подавляющее большинство объектов имеет площадь менее 2 × 10⁶ пикселей²\n","- Это значит, что объекты в основном небольшие по размеру относительно всего изображения\n","\n","Длинный правый хвост:\n","- Есть немного bbox с очень большой площадью (до 10⁷ пикселей²)\n","- Эти случаи — близко снятые шкафы\n","\n"],"metadata":{"id":"QU7hfL7nGUJv"}},{"cell_type":"markdown","source":["**причины разброса:**\n","- Разный масштаб съёмки (разные расстояния до объекта)\n","- Разные типы шкафов (размер зависит от модели)\n","- Частичные аннотации (например, если размечена только часть объекта)\n","\n"],"metadata":{"id":"-y0m9yZuGVVS"}},{"cell_type":"markdown","source":["## Шаг 5: Проверка ошибок и аномалий"],"metadata":{"id":"jKFszbl_GgJA"}},{"cell_type":"code","source":["invalid = df[(df['xmin']<0) | (df['ymin']<0) |\n","             (df['xmax']>df['img_w']) | (df['ymax']>df['img_h'])]\n","print(\"Найдено некорректных bbox:\", len(invalid))\n","small_boxes = df[df['bbox_area']<10]\n","large_boxes = df[df['bbox_area']>0.9*df['img_w']*df['img_h']]\n","print(\"Очень маленьких bbox:\", len(small_boxes))\n","print(\"Очень больших bbox:\", len(large_boxes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hWCizr1-FGi2","executionInfo":{"status":"ok","timestamp":1750519168952,"user_tz":-180,"elapsed":7,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"b09a5a62-5b06-4319-ef73-688a1a1015fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Найдено некорректных bbox: 0\n","Очень маленьких bbox: 0\n","Очень больших bbox: 8\n"]}]},{"cell_type":"markdown","source":["1. Некорректные bbox: 0\n","    \n","    проблемы были устранены\n","\n","2. Очень маленькие bbox: 0\n","    \n","    проблемы были устранены\n","\n","3. Очень большие bbox: 8\n","\n","    по всем большим BB это такой ракурс съемки, оставляем"],"metadata":{"id":"yF63PQtOGq2S"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import matplotlib.patches as patches\n","import os\n","from PIL import Image\n","\n","def show_bbox(df_subset, num_images=5):\n","    for idx, row in df_subset.head(num_images).iterrows():\n","        img_path = os.path.join(dataset_dir, row['image'])\n","        if not os.path.exists(img_path):\n","            print(f\"Файл не найден: {img_path}\")\n","            continue\n","\n","        img = Image.open(img_path)\n","        fig, ax = plt.subplots(1)\n","        ax.imshow(img)\n","\n","        rect = patches.Rectangle(\n","            (row['xmin'], row['ymin']),\n","            row['xmax'] - row['xmin'],\n","            row['ymax'] - row['ymin'],\n","            linewidth=2, edgecolor='r', facecolor='none'\n","        )\n","        ax.add_patch(rect)\n","\n","        ax.set_title(f\"{row['image']} | class: {row['class']}\")\n","        plt.axis('off')\n","        plt.show()\n"],"metadata":{"id":"pcM91hhTGvbr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["invalid"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"EVxgbZvsIzVy","executionInfo":{"status":"ok","timestamp":1750519168977,"user_tz":-180,"elapsed":18,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"e1ced2d6-7a85-4c32-9806-1fb1df6fb2e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [image, class, img_w, img_h, xmin, ymin, xmax, ymax, bbox_w, bbox_h, bbox_area]\n","Index: []"],"text/html":["\n","  <div id=\"df-6e7bf1b0-c5a4-48ca-b938-5d384044c286\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image</th>\n","      <th>class</th>\n","      <th>img_w</th>\n","      <th>img_h</th>\n","      <th>xmin</th>\n","      <th>ymin</th>\n","      <th>xmax</th>\n","      <th>ymax</th>\n","      <th>bbox_w</th>\n","      <th>bbox_h</th>\n","      <th>bbox_area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e7bf1b0-c5a4-48ca-b938-5d384044c286')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6e7bf1b0-c5a4-48ca-b938-5d384044c286 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6e7bf1b0-c5a4-48ca-b938-5d384044c286');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"invalid","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["show_bbox(invalid, num_images=5)"],"metadata":{"id":"tmFryZQkHxBC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["не корректные BB устранены"],"metadata":{"id":"Xw5J5k6bI6go"}},{"cell_type":"code","source":["show_bbox(large_boxes, num_images=8)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1n63VQXPlDIy7U0VYgefvvR2Byg4VX9UP"},"id":"AGgRLRLcHxJn","executionInfo":{"status":"ok","timestamp":1750519171866,"user_tz":-180,"elapsed":2884,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"b26bc3fd-e824-4f70-abd2-1b279da6e2f2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","source":["На этих примерах наблюдаем фотографии где из-за ракурса съемки BB занимает всю площадь фотографии не охватывая при этом весь исследуемый элемент\n","\n","Количество не велико, оставляем"],"metadata":{"id":"rUUT99kFJIpQ"}},{"cell_type":"markdown","source":["В ходе работ с моделями была обнаружена особенность - после загрузки фото в github некоторые фотографии меняли свою ориентацию с альбомной на книжную или наоборот, в итоге по таким фотографиям аннотации были не корректны (выходили за рамки изображения или просто не совпадали с объектом)\n","для решения выполнено два мероприятия\n","- с помощью Pillow зафиксировали ориентацию\n","- прошли по всем аннотациям с помощью labelimg и добавили параметры размеров фотографии к которым выполнены аннотации\n","\n","соответственно для валидации что все изображения и аннотации теперь выполнены и загружены в git корректно требуется еще один этап **проверки**\n"],"metadata":{"id":"XPYIn9j97-Tt"}},{"cell_type":"code","source":["import os\n","import xml.etree.ElementTree as ET\n","from glob import glob\n","import pandas as pd\n","from PIL import Image\n","\n","dataset_dir = '/content/object_foto_dataset/boxes_dataset'\n","rows = []\n","anns = glob(os.path.join(dataset_dir, '*.xml'))\n","rotation_issues = []  # Для сбора информации о проблемных изображениях\n","\n","for xml_file in anns:\n","    try:\n","        tree = ET.parse(xml_file)\n","        root = tree.getroot()\n","\n","        # Имя изображения\n","        filename_tag = root.find('filename')\n","        if filename_tag is None or filename_tag.text is None:\n","            print(f\"[!] Нет имени изображения: {xml_file}\")\n","            continue\n","\n","        img_name = filename_tag.text.strip()\n","        img_path = os.path.join(dataset_dir, img_name)\n","        if not os.path.exists(img_path):\n","            print(f\"[!] Изображение не найдено: {img_path}\")\n","            continue\n","\n","        # Размеры из аннотации\n","        size_tag = root.find('size')\n","        if size_tag is not None:\n","            ann_width = int(size_tag.find('width').text)\n","            ann_height = int(size_tag.find('height').text)\n","        else:\n","            ann_width, ann_height = None, None\n","            print(f\"[!] В аннотации {xml_file} отсутствует тег <size>\")\n","\n","        # Реальные размеры изображения\n","        with Image.open(img_path) as img:\n","            real_width, real_height = img.size\n","\n","        # Проверка на поворот/несоответствие размеров\n","        if ann_width is not None and ann_height is not None:\n","            if (real_width, real_height) not in [(ann_width, ann_height), (ann_height, ann_width)]:\n","                rotation_issues.append({\n","                    'image': img_name,\n","                    'real_width': real_width,\n","                    'real_height': real_height,\n","                    'ann_width': ann_width,\n","                    'ann_height': ann_height\n","                })\n","\n","        # Парсинг объектов\n","        for obj in root.findall('object'):\n","            cls = obj.find('name')\n","            bbox = obj.find('bndbox')\n","            if cls is None or bbox is None:\n","                continue\n","\n","            xmin = bbox.find('xmin')\n","            ymin = bbox.find('ymin')\n","            xmax = bbox.find('xmax')\n","            ymax = bbox.find('ymax')\n","\n","            if None in (xmin, ymin, xmax, ymax):\n","                continue\n","\n","            rows.append({\n","                'image': img_name,\n","                'class': cls.text,\n","                'img_w': real_width,    # Используем реальные размеры\n","                'img_h': real_height,\n","                'ann_width': ann_width, # Размеры из аннотации\n","                'ann_height': ann_height,\n","                'xmin': int(xmin.text),\n","                'ymin': int(ymin.text),\n","                'xmax': int(xmax.text),\n","                'ymax': int(ymax.text)\n","            })\n","\n","    except Exception as e:\n","        print(f\"[!] Ошибка в {xml_file}: {e}\")\n","\n","# Создаем DataFrame\n","df = pd.DataFrame(rows)\n","if not df.empty:\n","    df['bbox_w'] = df['xmax'] - df['xmin']\n","    df['bbox_h'] = df['ymax'] - df['ymin']\n","    df['bbox_area'] = df['bbox_w'] * df['bbox_h']\n","print(f\"Объектов загружено: {len(df)}\")\n","\n","# Анализ проблемных изображений\n","if rotation_issues:\n","    print(\"\\n[!] Найдены несоответствия размеров в изображениях:\")\n","    issues_df = pd.DataFrame(rotation_issues)\n","    display(issues_df)\n","\n","    # Группируем по изображениям (если несколько объектов в одном файле)\n","    summary = issues_df.groupby('image').first().reset_index()\n","    print(f\"\\nКоличество проблемных изображений: {len(summary)}\")\n","    for _, row in summary.iterrows():\n","        print(\n","            f\"Изображение: {row['image']}\\n\"\n","            f\"  Реальные размеры: {row['real_width']}x{row['real_height']}\\n\"\n","            f\"  Размеры в аннотации: {row['ann_width']}x{row['ann_height']}\"\n","        )\n","else:\n","    print(\"\\n[OK] Все изображения соответствуют размерам в аннотациях\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aqDHrP7WBQC1","executionInfo":{"status":"ok","timestamp":1750519172372,"user_tz":-180,"elapsed":161,"user":{"displayName":"Михаил Фирсов","userId":"16149129323287574610"}},"outputId":"c51061c9-d9ea-41e7-f684-ac4edf3f66be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Объектов загружено: 1036\n","\n","[OK] Все изображения соответствуют размерам в аннотациях\n"]}]},{"cell_type":"markdown","source":["# Заключение по итогам EDA"],"metadata":{"id":"WjuxXI0sJx1S"}},{"cell_type":"markdown","source":["- после первого этапа анализа данных провели ряд действий в результате чего все мешающие дефекты данных устранены\n","\n","- на базе опыта обучения моделей выявили дополнительные проблемы и их так же устранили"],"metadata":{"id":"Va1bGNHVJ15R"}},{"cell_type":"markdown","source":["----"],"metadata":{"id":"YeMqtIuD1gP5"}}]}