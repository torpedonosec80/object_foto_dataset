# Основной ноутбук
from data_preparation import convert_annotations_to_yolo_format
from model_training import train_yolo_model, save_model
from evaluation import evaluate_model, visualize_predictions
from metrics_analysis import plot_training_metrics, analyze_detections
from error_analysis import compare_detections_with_gt, visualize_errors
from utils import save_results_to_drive, view_images_from_folder
import config

# Конфигурация
DATA_DIR = "/content/object_foto_dataset/boxes_dataset"
YOLO_DATA_DIR = "/content/yolo_dataset"

# 1. Подготовка данных
convert_annotations_to_yolo_format(DATA_DIR, YOLO_DATA_DIR, ['train', 'val', 'test'])

# 2. Обучение модели
model, results = train_yolo_model(
    data_yaml=os.path.join(YOLO_DATA_DIR, 'dataset.yaml'),
    epochs=30,
    batch_size=8,
    model_size='n'
)
model_path = save_model(model)

# 3. Оценка модели
test_results = evaluate_model(model, os.path.join(YOLO_DATA_DIR, 'dataset.yaml'))
pred_img_path = visualize_predictions(model, YOLO_DATA_DIR, num_samples=15)

# 4. Анализ метрик
metrics_img_path = plot_training_metrics()
detection_stats = analyze_detections(detections_df)

# 5. Анализ ошибок (предполагаем, что у нас есть df_detections и df_annotations)
comparison_df = compare_detections_with_gt(df_detections, df_annotations)
fp_count, fn_count = visualize_errors(comparison_df, DATA_DIR)

# 6. Просмотр ошибок
view_images_from_folder("false_positives", num_samples=10, title_prefix="FP: ")
view_images_from_folder("false_negatives", num_samples=10, title_prefix="FN: ")

# 7. Сохранение результатов
save_path = save_results_to_drive("/content/results")
